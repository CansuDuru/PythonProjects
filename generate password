import random

parameters = (input("Enter the parameters you'd like: ")).split()
password = []

# the part we insert symbols according to the parameters (at the end, total number of symbols will be A + B + C)
for i in range(int(parameters[0])):
    password.append((chr(random.randint(ord('A'), ord('Z')))))
for j in range(int(parameters[1])):
    # insert(index, item) : used randint to choose index and item randomly.
    password.insert(random.randint(0, len(password) + 1), chr(random.randint(ord('a'), ord('z'))))
for k in range(int(parameters[2])):
    password.insert(random.randint(0, len(password) + 1), random.randint(0, 9))

# the part to be used if N > A + B + C
while len(password) < int(parameters[3]):
    choice = random.randint(1, 3)  # to choose fillers randomly
    if choice == 1:
        password.insert(random.randint(0, len(password) + 1), chr(random.randint(ord('a'), ord('z'))))
    elif choice == 2:
        password.insert(random.randint(0, len(password) + 1), chr(random.randint(ord('A'), ord('Z'))))
    else:
        password.insert(random.randint(0, len(password) + 1), random.randint(0, 9))

# this part is to control whether two (or more) characters are same in a row, and to fix it.
for t in range(len(password) - 1):
    # this part is to compare letters not caring if they are lower/upper; they have to be different letters in any case.
    if str(password[t]).isalpha() and str(password[t + 1]).isalpha() and str(password[t]).upper() == str(password[t + 1]).upper():
        if str(password[t + 1]).islower():  # to add letters accordingly to the parameters and the prev one.
            # to prevent choosing the same character once again, i part the gap in two to exclude prev character.
            choice2 = random.randint(1, 2)  # and to choose between these two parts, used randint again.
            if choice2 == 1:
                password.insert(t + 1, chr(random.randint(ord('a'), ord(f'{password[t + 1]}') - 1)))
                del password[t + 2]
            else:
                password.insert(t + 1, chr(random.randint(ord(f'{password[t + 1]}') - 1, ord('z'))))
                del password[t + 2]
        else:  # to add letters accordingly to the parameters
            choice2 = random.randint(1, 2)
            if choice2 == 1:
                password.insert(t + 1, chr(random.randint(ord('A'), ord(f'{password[t + 1]}') - 1)))
                del password[t + 2]
            else:
                password.insert(t + 1, chr(random.randint(ord(f'{password[t + 1]}') - 1, ord('Z'))))
                del password[t + 2]
    # this part is to compare digits.
    elif str(password[t]).isdigit() and str(password[t + 1]).isdigit() and password[t] == password[t + 1]:
        choice2 = random.randint(1, 2)
        if choice2 == 1:
            password.insert(t + 1, random.randint(0, password[t + 1] - 1))
            del password[t + 2]
        else:
            password.insert(t + 1, random.randint(password[t + 1] - 1, 9))
            del password[t + 2]

# this part is to convert list into string accordingly to the password format given.
final_password = ""
for y in password:
    final_password = (final_password + str(y)).strip()

print(f"\nPassword: {final_password}")
